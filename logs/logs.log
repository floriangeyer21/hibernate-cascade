2020-10-01 17:11:21 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.21.Final
2020-10-01 17:11:21 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-10-01 17:11:21 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:79 - Calling a remove() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:85 - Attempt to remove comment Comment(content=This article is awesome!!!) from db
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Comment_Smile where Comment_id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Comment where id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [funny]
2020-10-01 17:11:22 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=1, value='funny'} in db.
2020-10-01 17:11:22 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [awesome]
2020-10-01 17:11:22 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=2, value='awesome'} in db.
2020-10-01 17:11:22 INFO  SmileDaoImpl:42 - Calling a get() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select smile0_.id as id1_2_0_, smile0_.value as value2_2_0_ from Smile smile0_ where smile0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([value2_2_0_] : [VARCHAR]) - [funny]
2020-10-01 17:11:22 INFO  SmileDaoImpl:49 - Attempt to retrieve smile Smile{id=1, value='funny'} from db.
2020-10-01 17:11:22 INFO  SmileDaoImpl:42 - Calling a get() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select smile0_.id as id1_2_0_, smile0_.value as value2_2_0_ from Smile smile0_ where smile0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([value2_2_0_] : [VARCHAR]) - [awesome]
2020-10-01 17:11:22 INFO  SmileDaoImpl:49 - Attempt to retrieve smile Smile{id=2, value='awesome'} from db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment_Smile (Comment_id, smiles_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [1]
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment_Smile (Comment_id, smiles_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
2020-10-01 17:11:22 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:79 - Calling a remove() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:85 - Attempt to remove comment Comment(content=This article is awesome!!!) from db
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Comment_Smile where Comment_id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Comment where id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:22 INFO  SmileDaoImpl:42 - Calling a get() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select smile0_.id as id1_2_0_, smile0_.value as value2_2_0_ from Smile smile0_ where smile0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([value2_2_0_] : [VARCHAR]) - [funny]
2020-10-01 17:11:22 INFO  SmileDaoImpl:49 - Attempt to retrieve smile Smile{id=1, value='funny'} from db.
2020-10-01 17:11:22 INFO  SmileDaoImpl:42 - Calling a get() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select smile0_.id as id1_2_0_, smile0_.value as value2_2_0_ from Smile smile0_ where smile0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([value2_2_0_] : [VARCHAR]) - [awesome]
2020-10-01 17:11:22 INFO  SmileDaoImpl:49 - Attempt to retrieve smile Smile{id=2, value='awesome'} from db.
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is not bad]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is not bad) in db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:22 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This article is awesome!!!]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [2]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This article is not bad]
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment_Smile (Comment_id, smiles_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  AbstractBatchImpl:208 - HHH000010: On release of batch it still contained JDBC statements
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:42 - Calling a get() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select comment0_.id as id1_0_0_, comment0_.content as content2_0_0_ from Comment comment0_ where comment0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_0_] : [VARCHAR]) - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:48 - Attempt to retrieve comment Comment(content=This article is awesome!!!) from db.
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [funny]
2020-10-01 17:11:22 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=1, value='funny'} in db.
2020-10-01 17:11:22 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [awesome]
2020-10-01 17:11:22 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=2, value='awesome'} in db.
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment_Smile (Comment_id, smiles_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [1]
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment_Smile (Comment_id, smiles_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  CommentDaoImpl:19 - Calling a create() method of CommentDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This article is awesome!!!]
2020-10-01 17:11:22 INFO  CommentDaoImpl:25 - Attempt to save comment Comment(content=This article is awesome!!!) in db.
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message_MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message_MessageDetails (Message_id bigint not null, messageDetails_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint UK_aj8bjjuctw39urtkx8i3b3p55 unique (messageDetails_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ie6uhc3t6x130ig7h8ubvh9i foreign key (messageDetails_id) references MessageDetails
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ot5prt3maod3jvq675a7gic1 foreign key (Message_id) references Message
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Welcome message]
2020-10-01 17:11:22 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Welcome message, messageDetails=null) in db.
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message_MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message_MessageDetails (Message_id bigint not null, messageDetails_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint UK_aj8bjjuctw39urtkx8i3b3p55 unique (messageDetails_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ie6uhc3t6x130ig7h8ubvh9i foreign key (messageDetails_id) references MessageDetails
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ot5prt3maod3jvq675a7gic1 foreign key (Message_id) references Message
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Welcome message]
2020-10-01 17:11:22 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Welcome message, messageDetails=null) in db.
2020-10-01 17:11:22 INFO  MessageDaoImpl:44 - Calling a get() method of MessageDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select message0_.id as id1_0_0_, message0_.content as content2_0_0_ from Message message0_ where message0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_0_] : [VARCHAR]) - [Welcome message]
2020-10-01 17:11:22 DEBUG SQL:128 - select messagedet0_.Message_id as message_1_1_0_, messagedet0_.messageDetails_id as messaged2_1_0_, messagedet1_.id as id1_2_1_, messagedet1_.sender as sender2_2_1_, messagedet1_.sentTime as senttime3_2_1_ from Message_MessageDetails messagedet0_ inner join MessageDetails messagedet1_ on messagedet0_.messageDetails_id=messagedet1_.id where messagedet0_.Message_id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  MessageDaoImpl:50 - Attempt to retrieve message Message(content=Welcome message, messageDetails=[]) from db.
2020-10-01 17:11:22 INFO  MessageDaoImpl:81 - Calling a remove() method of MessageDaoImpl class
2020-10-01 17:11:22 INFO  MessageDaoImpl:87 - Attempt to remove message from db.
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Message_MessageDetails where Message_id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Message where id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  MessageDaoImpl:67 - Calling a getAll() method of MessageDaoImpl class
2020-10-01 17:11:22 INFO  MessageDaoImpl:72 - Attempt to retrieve collection of messages from db.
2020-10-01 17:11:22 DEBUG SQL:128 - select message0_.id as id1_0_, message0_.content as content2_0_ from Message message0_
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message_MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message_MessageDetails (Message_id bigint not null, messageDetails_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint UK_aj8bjjuctw39urtkx8i3b3p55 unique (messageDetails_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ie6uhc3t6x130ig7h8ubvh9i foreign key (messageDetails_id) references MessageDetails
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ot5prt3maod3jvq675a7gic1 foreign key (Message_id) references Message
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Welcome message]
2020-10-01 17:11:22 DEBUG SQL:128 - insert into MessageDetails (id, sender, sentTime) values (default, ?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:22 TRACE BasicBinder:52 - binding parameter [2] as [TIMESTAMP] - [null]
2020-10-01 17:11:22 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Welcome message, messageDetails=[MessageDetails(sender=Bob, sentTime=null)]) in db.
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Message_MessageDetails (Message_id, messageDetails_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists Message_MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - create table Message_MessageDetails (Message_id bigint not null, messageDetails_id bigint not null)
2020-10-01 17:11:22 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint UK_aj8bjjuctw39urtkx8i3b3p55 unique (messageDetails_id)
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ie6uhc3t6x130ig7h8ubvh9i foreign key (messageDetails_id) references MessageDetails
2020-10-01 17:11:22 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ot5prt3maod3jvq675a7gic1 foreign key (Message_id) references Message
2020-10-01 17:11:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:22 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Welcome message]
2020-10-01 17:11:22 DEBUG SQL:128 - insert into MessageDetails (id, sender, sentTime) values (default, ?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:22 TRACE BasicBinder:52 - binding parameter [2] as [TIMESTAMP] - [null]
2020-10-01 17:11:22 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Welcome message, messageDetails=[MessageDetails(sender=Bob, sentTime=null)]) in db.
2020-10-01 17:11:22 DEBUG SQL:128 - insert into Message_MessageDetails (Message_id, messageDetails_id) values (?, ?)
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [1]
2020-10-01 17:11:22 INFO  MessageDaoImpl:44 - Calling a get() method of MessageDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select message0_.id as id1_0_0_, message0_.content as content2_0_0_ from Message message0_ where message0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([content2_0_0_] : [VARCHAR]) - [Welcome message]
2020-10-01 17:11:22 DEBUG SQL:128 - select messagedet0_.Message_id as message_1_1_0_, messagedet0_.messageDetails_id as messaged2_1_0_, messagedet1_.id as id1_2_1_, messagedet1_.sender as sender2_2_1_, messagedet1_.sentTime as senttime3_2_1_ from Message_MessageDetails messagedet0_ inner join MessageDetails messagedet1_ on messagedet0_.messageDetails_id=messagedet1_.id where messagedet0_.Message_id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([id1_2_1_] : [BIGINT]) - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([sender2_2_1_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:22 TRACE BasicExtractor:50 - extracted value ([senttime3_2_1_] : [TIMESTAMP]) - [null]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([message_1_1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([messaged2_1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:22 INFO  MessageDaoImpl:50 - Attempt to retrieve message Message(content=Welcome message, messageDetails=[MessageDetails(sender=Bob, sentTime=null)]) from db.
2020-10-01 17:11:22 INFO  MessageDetailsDaoImpl:40 - Calling a get() method of MessageDetailsDaoImpl class
2020-10-01 17:11:22 DEBUG SQL:128 - select messagedet0_.id as id1_2_0_, messagedet0_.sender as sender2_2_0_, messagedet0_.sentTime as senttime3_2_0_ from MessageDetails messagedet0_ where messagedet0_.id=?
2020-10-01 17:11:22 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:22 TRACE BasicExtractor:60 - extracted value ([sender2_2_0_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:22 TRACE BasicExtractor:50 - extracted value ([senttime3_2_0_] : [TIMESTAMP]) - [null]
2020-10-01 17:11:22 INFO  MessageDetailsDaoImpl:47 - Attempt to retrieve messageDetails MessageDetails(sender=Bob, sentTime=null) from db.
2020-10-01 17:11:22 INFO  MessageDaoImpl:81 - Calling a remove() method of MessageDaoImpl class
2020-10-01 17:11:22 INFO  MessageDaoImpl:87 - Attempt to remove message from db.
2020-10-01 17:11:22 DEBUG SQL:128 - delete from Message_MessageDetails where Message_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 DEBUG SQL:128 - delete from MessageDetails where id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 DEBUG SQL:128 - delete from Message where id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  MessageDaoImpl:67 - Calling a getAll() method of MessageDaoImpl class
2020-10-01 17:11:23 INFO  MessageDaoImpl:72 - Attempt to retrieve collection of messages from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select message0_.id as id1_0_, message0_.content as content2_0_ from Message message0_
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:40 - Calling a get() method of MessageDetailsDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select messagedet0_.id as id1_2_0_, messagedet0_.sender as sender2_2_0_, messagedet0_.sentTime as senttime3_2_0_ from MessageDetails messagedet0_ where messagedet0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:47 - Attempt to retrieve messageDetails null from db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Message CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Message_MessageDetails CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Message (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Message_MessageDetails (Message_id bigint not null, messageDetails_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Message_MessageDetails add constraint UK_aj8bjjuctw39urtkx8i3b3p55 unique (messageDetails_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ie6uhc3t6x130ig7h8ubvh9i foreign key (messageDetails_id) references MessageDetails
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ot5prt3maod3jvq675a7gic1 foreign key (Message_id) references Message
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Welcome message]
2020-10-01 17:11:23 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Welcome message, messageDetails=null) in db.
2020-10-01 17:11:23 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Goodbye message]
2020-10-01 17:11:23 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Goodbye message, messageDetails=null) in db.
2020-10-01 17:11:23 INFO  MessageDaoImpl:67 - Calling a getAll() method of MessageDaoImpl class
2020-10-01 17:11:23 INFO  MessageDaoImpl:72 - Attempt to retrieve collection of messages from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select message0_.id as id1_0_, message0_.content as content2_0_ from Message message0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [Welcome message]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [Goodbye message]
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Message CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Message_MessageDetails CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Message (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Message_MessageDetails (Message_id bigint not null, messageDetails_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Message_MessageDetails add constraint UK_aj8bjjuctw39urtkx8i3b3p55 unique (messageDetails_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ie6uhc3t6x130ig7h8ubvh9i foreign key (messageDetails_id) references MessageDetails
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Message_MessageDetails add constraint FK2ot5prt3maod3jvq675a7gic1 foreign key (Message_id) references Message
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  MessageDaoImpl:20 - Calling a create() method of MessageDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Message (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Welcome message]
2020-10-01 17:11:23 INFO  MessageDaoImpl:27 - Attempt to store message Message(content=Welcome message, messageDetails=null) in db.
2020-10-01 17:11:23 INFO  MessageDaoImpl:44 - Calling a get() method of MessageDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select message0_.id as id1_0_0_, message0_.content as content2_0_0_ from Message message0_ where message0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_0_] : [VARCHAR]) - [Welcome message]
2020-10-01 17:11:23 DEBUG SQL:128 - select messagedet0_.Message_id as message_1_1_0_, messagedet0_.messageDetails_id as messaged2_1_0_, messagedet1_.id as id1_2_1_, messagedet1_.sender as sender2_2_1_, messagedet1_.sentTime as senttime3_2_1_ from Message_MessageDetails messagedet0_ inner join MessageDetails messagedet1_ on messagedet0_.messageDetails_id=messagedet1_.id where messagedet0_.Message_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  MessageDaoImpl:50 - Attempt to retrieve message Message(content=Welcome message, messageDetails=[]) from db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:17 - Calling a create() method of MessageDetailsDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into MessageDetails (id, sender, sentTime) values (default, ?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [TIMESTAMP] - [2020-10-01T10:25]
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:23 - Attempt to store messageDetails MessageDetails(sender=Bob, sentTime=2020-10-01T10:25) to db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists MessageDetails CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table MessageDetails (id bigint generated by default as identity (start with 1), sender varchar(255), sentTime timestamp, primary key (id))
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:17 - Calling a create() method of MessageDetailsDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into MessageDetails (id, sender, sentTime) values (default, ?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [TIMESTAMP] - [2020-10-01T10:25]
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:23 - Attempt to store messageDetails MessageDetails(sender=Bob, sentTime=2020-10-01T10:25) to db.
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:40 - Calling a get() method of MessageDetailsDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select messagedet0_.id as id1_0_0_, messagedet0_.sender as sender2_0_0_, messagedet0_.sentTime as senttime3_0_0_ from MessageDetails messagedet0_ where messagedet0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([sender2_0_0_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([senttime3_0_0_] : [TIMESTAMP]) - [2020-10-01T10:25]
2020-10-01 17:11:23 INFO  MessageDetailsDaoImpl:47 - Attempt to retrieve messageDetails MessageDetails(sender=Bob, sentTime=2020-10-01T10:25) from db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [funny]
2020-10-01 17:11:23 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=1, value='funny'} in db.
2020-10-01 17:11:23 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [sad]
2020-10-01 17:11:23 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=2, value='sad'} in db.
2020-10-01 17:11:23 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [relieved]
2020-10-01 17:11:23 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=3, value='relieved'} in db.
2020-10-01 17:11:23 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [disappointed]
2020-10-01 17:11:23 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=4, value='disappointed'} in db.
2020-10-01 17:11:23 INFO  SmileDaoImpl:65 - Calling a getAll() method of SmileDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select smile0_.id as id1_0_, smile0_.value as value2_0_ from Smile smile0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([value2_0_] : [VARCHAR]) - [funny]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([value2_0_] : [VARCHAR]) - [sad]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [3]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([value2_0_] : [VARCHAR]) - [relieved]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [4]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([value2_0_] : [VARCHAR]) - [disappointed]
2020-10-01 17:11:23 INFO  SmileDaoImpl:71 - Attempt to retrieve collections of smiles from db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  SmileDaoImpl:19 - Calling a create() method of SmileDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Smile (id, value) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [funny]
2020-10-01 17:11:23 INFO  SmileDaoImpl:25 - Attempt to store smile Smile{id=1, value='funny'} in db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User_Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User (id bigint generated by default as identity (start with 1), username varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User_Comment (User_id bigint not null, comments_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint UK_ah9x95me6onvo198wl0s87lji unique (comments_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKrxs5nkgg2aaov9407wh1ifglp foreign key (comments_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKjhm6lfj7c3j3nfuqmflfogiki foreign key (User_id) references User
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [bob]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=bob, comments=null) in db.
2020-10-01 17:11:23 INFO  UserDaoImpl:42 - Calling a get() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_0_, user0_.username as username2_3_0_, comments1_.User_id as user_id1_4_1_, comment2_.id as comments2_4_1_, comment2_.id as id1_0_2_, comment2_.content as content2_0_2_ from User user0_ left outer join User_Comment comments1_ on user0_.id=comments1_.User_id left outer join Comment comment2_ on comments1_.comments_id=comment2_.id where user0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:50 - extracted value ([id1_0_2_] : [BIGINT]) - [null]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_0_] : [VARCHAR]) - [bob]
2020-10-01 17:11:23 TRACE BasicExtractor:50 - extracted value ([user_id1_4_1_] : [BIGINT]) - [null]
2020-10-01 17:11:23 INFO  UserDaoImpl:48 - Attempt to retrieve user User(username=bob, comments=[]) from db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User_Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User (id bigint generated by default as identity (start with 1), username varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User_Comment (User_id bigint not null, comments_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint UK_ah9x95me6onvo198wl0s87lji unique (comments_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKrxs5nkgg2aaov9407wh1ifglp foreign key (comments_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKjhm6lfj7c3j3nfuqmflfogiki foreign key (User_id) references User
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [bob]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=bob, comments=null) in db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User_Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User (id bigint generated by default as identity (start with 1), username varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User_Comment (User_id bigint not null, comments_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint UK_ah9x95me6onvo198wl0s87lji unique (comments_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKrxs5nkgg2aaov9407wh1ifglp foreign key (comments_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKjhm6lfj7c3j3nfuqmflfogiki foreign key (User_id) references User
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=Bob, comments=null) in db.
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Alice]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=Alice, comments=null) in db.
2020-10-01 17:11:23 INFO  UserDaoImpl:65 - Calling a getAll() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:70 - Attempt to all users from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_, user0_.username as username2_3_ from User user0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Alice]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User_Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User (id bigint generated by default as identity (start with 1), username varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User_Comment (User_id bigint not null, comments_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint UK_ah9x95me6onvo198wl0s87lji unique (comments_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKrxs5nkgg2aaov9407wh1ifglp foreign key (comments_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKjhm6lfj7c3j3nfuqmflfogiki foreign key (User_id) references User
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:23 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This comment is ok!]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This comment is good!]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=Bob, comments=[Comment(content=This comment is ok!), Comment(content=This comment is good!)]) in db.
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User_Comment (User_id, comments_id) values (?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [1]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User_Comment (User_id, comments_id) values (?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [2]
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Alice]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This comment is not bad!]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This comment is awesome!]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=Alice, comments=[Comment(content=This comment is not bad!), Comment(content=This comment is awesome!)]) in db.
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User_Comment (User_id, comments_id) values (?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [3]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User_Comment (User_id, comments_id) values (?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [4]
2020-10-01 17:11:23 INFO  UserDaoImpl:65 - Calling a getAll() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:70 - Attempt to all users from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_, user0_.username as username2_3_ from User user0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Alice]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_1_] : [VARCHAR]) - [This comment is not bad!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([user_id1_4_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([comments2_4_0_] : [BIGINT]) - [3]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_1_] : [BIGINT]) - [4]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_1_] : [VARCHAR]) - [This comment is awesome!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([user_id1_4_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([comments2_4_0_] : [BIGINT]) - [4]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_1_] : [VARCHAR]) - [This comment is ok!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([user_id1_4_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([comments2_4_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_1_] : [VARCHAR]) - [This comment is good!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([user_id1_4_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([comments2_4_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:23 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is ok!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is good!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [3]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is not bad!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [4]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is awesome!]
2020-10-01 17:11:23 INFO  UserDaoImpl:79 - Calling a remove() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:85 - Attempt to delete user User(username=Bob, comments=[Comment(content=This comment is ok!), Comment(content=This comment is good!)]) from db.
2020-10-01 17:11:23 DEBUG SQL:128 - delete from User_Comment where User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 DEBUG SQL:128 - delete from User where id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  UserDaoImpl:79 - Calling a remove() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:85 - Attempt to delete user User(username=Alice, comments=[Comment(content=This comment is not bad!), Comment(content=This comment is awesome!)]) from db.
2020-10-01 17:11:23 DEBUG SQL:128 - delete from User_Comment where User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 DEBUG SQL:128 - delete from User where id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 INFO  UserDaoImpl:65 - Calling a getAll() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:70 - Attempt to all users from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_, user0_.username as username2_3_ from User user0_
2020-10-01 17:11:23 INFO  CommentDaoImpl:65 - Calling a getAll() method of CommentDaoImpl class
2020-10-01 17:11:23 INFO  CommentDaoImpl:70 - Attempt to retrieve collection of comments from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select comment0_.id as id1_0_, comment0_.content as content2_0_ from Comment comment0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is ok!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is good!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [3]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is not bad!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_] : [BIGINT]) - [4]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_] : [VARCHAR]) - [This comment is awesome!]
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User_Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User (id bigint generated by default as identity (start with 1), username varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User_Comment (User_id bigint not null, comments_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint UK_ah9x95me6onvo198wl0s87lji unique (comments_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKrxs5nkgg2aaov9407wh1ifglp foreign key (comments_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKjhm6lfj7c3j3nfuqmflfogiki foreign key (User_id) references User
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [bob]
2020-10-01 17:11:23 DEBUG SQL:128 - insert into Comment (id, content) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [This comment is ok!]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=bob, comments=[Comment(content=This comment is ok!)]) in db.
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User_Comment (User_id, comments_id) values (?, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [2] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  UserDaoImpl:42 - Calling a get() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_0_, user0_.username as username2_3_0_, comments1_.User_id as user_id1_4_1_, comment2_.id as comments2_4_1_, comment2_.id as id1_0_2_, comment2_.content as content2_0_2_ from User user0_ left outer join User_Comment comments1_ on user0_.id=comments1_.User_id left outer join Comment comment2_ on comments1_.comments_id=comment2_.id where user0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_0_2_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_0_] : [VARCHAR]) - [bob]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([content2_0_2_] : [VARCHAR]) - [This comment is ok!]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([user_id1_4_1_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([comments2_4_1_] : [BIGINT]) - [1]
2020-10-01 17:11:23 INFO  UserDaoImpl:48 - Attempt to retrieve user User(username=bob, comments=[Comment(content=This comment is ok!)]) from db.
2020-10-01 17:11:23 INFO  Dialect:170 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Comment_Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists Smile CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - drop table if exists User_Comment CASCADE 
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment (id bigint generated by default as identity (start with 1), content varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table Comment_Smile (Comment_id bigint not null, smiles_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - create table Smile (id bigint generated by default as identity (start with 1), value varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User (id bigint generated by default as identity (start with 1), username varchar(255), primary key (id))
2020-10-01 17:11:23 DEBUG SQL:128 - create table User_Comment (User_id bigint not null, comments_id bigint not null)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint UK_f6buy1bcs7kckhef9909y4710 unique (smiles_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint UK_ah9x95me6onvo198wl0s87lji unique (comments_id)
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKfit192i9mhx5tcx63tpk3rjoa foreign key (smiles_id) references Smile
2020-10-01 17:11:23 DEBUG SQL:128 - alter table Comment_Smile add constraint FKk58gm41m1fye4gl748amoeu2i foreign key (Comment_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKrxs5nkgg2aaov9407wh1ifglp foreign key (comments_id) references Comment
2020-10-01 17:11:23 DEBUG SQL:128 - alter table User_Comment add constraint FKjhm6lfj7c3j3nfuqmflfogiki foreign key (User_id) references User
2020-10-01 17:11:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Bob]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=Bob, comments=null) in db.
2020-10-01 17:11:23 INFO  UserDaoImpl:42 - Calling a get() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_0_, user0_.username as username2_3_0_, comments1_.User_id as user_id1_4_1_, comment2_.id as comments2_4_1_, comment2_.id as id1_0_2_, comment2_.content as content2_0_2_ from User user0_ left outer join User_Comment comments1_ on user0_.id=comments1_.User_id left outer join Comment comment2_ on comments1_.comments_id=comment2_.id where user0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:50 - extracted value ([id1_0_2_] : [BIGINT]) - [null]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_0_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:23 TRACE BasicExtractor:50 - extracted value ([user_id1_4_1_] : [BIGINT]) - [null]
2020-10-01 17:11:23 INFO  UserDaoImpl:48 - Attempt to retrieve user User(username=Bob, comments=[]) from db.
2020-10-01 17:11:23 INFO  UserDaoImpl:19 - Calling a create() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - insert into User (id, username) values (default, ?)
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [VARCHAR] - [Alice]
2020-10-01 17:11:23 INFO  UserDaoImpl:25 - Attempt to store user User(username=Alice, comments=null) in db.
2020-10-01 17:11:23 INFO  UserDaoImpl:42 - Calling a get() method of UserDaoImpl class
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_0_, user0_.username as username2_3_0_, comments1_.User_id as user_id1_4_1_, comment2_.id as comments2_4_1_, comment2_.id as id1_0_2_, comment2_.content as content2_0_2_ from User user0_ left outer join User_Comment comments1_ on user0_.id=comments1_.User_id left outer join Comment comment2_ on comments1_.comments_id=comment2_.id where user0_.id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:50 - extracted value ([id1_0_2_] : [BIGINT]) - [null]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_0_] : [VARCHAR]) - [Alice]
2020-10-01 17:11:23 TRACE BasicExtractor:50 - extracted value ([user_id1_4_1_] : [BIGINT]) - [null]
2020-10-01 17:11:23 INFO  UserDaoImpl:48 - Attempt to retrieve user User(username=Alice, comments=[]) from db.
2020-10-01 17:11:23 INFO  UserDaoImpl:65 - Calling a getAll() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:70 - Attempt to all users from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_, user0_.username as username2_3_ from User user0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [1]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Bob]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Alice]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  UserDaoImpl:79 - Calling a remove() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:85 - Attempt to delete user User(username=Bob, comments=null) from db.
2020-10-01 17:11:23 DEBUG SQL:128 - delete from User_Comment where User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 DEBUG SQL:128 - delete from User where id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [1]
2020-10-01 17:11:23 INFO  UserDaoImpl:65 - Calling a getAll() method of UserDaoImpl class
2020-10-01 17:11:23 INFO  UserDaoImpl:70 - Attempt to all users from db.
2020-10-01 17:11:23 DEBUG SQL:128 - select user0_.id as id1_3_, user0_.username as username2_3_ from User user0_
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([id1_3_] : [BIGINT]) - [2]
2020-10-01 17:11:23 TRACE BasicExtractor:60 - extracted value ([username2_3_] : [VARCHAR]) - [Alice]
2020-10-01 17:11:23 DEBUG SQL:128 - select comments0_.User_id as user_id1_4_0_, comments0_.comments_id as comments2_4_0_, comment1_.id as id1_0_1_, comment1_.content as content2_0_1_ from User_Comment comments0_ inner join Comment comment1_ on comments0_.comments_id=comment1_.id where comments0_.User_id=?
2020-10-01 17:11:23 TRACE BasicBinder:64 - binding parameter [1] as [BIGINT] - [2]
